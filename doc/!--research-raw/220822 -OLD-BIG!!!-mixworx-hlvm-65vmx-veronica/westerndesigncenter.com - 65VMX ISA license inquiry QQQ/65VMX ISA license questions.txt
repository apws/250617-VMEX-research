
Hello, as I love 6502 since I meet Atari 800XL and wrote also 8080 emulator using Atmas-II macroassembler (lots of macros for similar instructions inlined mostly, routine vectors table and PC increments table), I have a long time idea to make some software/virtual implementation of 6502 with virtual MMU to specify PC mask (64k, 32k, 16k, 8k, ...) of allocated available memory and mask also zero page and stacku usage (to size down both of them to absolute minimum required by code), and to be able to run MANY of such virtual 6502 virtually in parallel as "virtual multicore", where each object instance will run its own 6502 engine with such virtully maaped memory (6502 will see whole 64k memspace but with mirrorings in ZP/SP and whole area up to 64k top, where NMI, IRQ, RST vectors live - and I want to add 16bit engine descriptor at FFF8, where PC, ZP, SP masks will be defined by count of bits (16, 8, 8) so very tiny applet for example with 1k (or even only 256byte)  memory can have only 32 unique bytes in ZP and 16 unique bytes in SP mapped into address space and whole such engine initializes by RESET vector and is called by native system on NMI vector and can call system through IRQ/BRK vector (using BRK and following bytes convention as syscall prefix in fact) ... such implementation of "Virtual Multicore eXtensible" so 65VMX, will allow to easily write applets/objects running in úparralel together with native implemented peripheral access in kernel on top of any ARM/AVR/MIPS, as finally it will be written in portable C, although initially I expect C# or typescript/node/JsRT/chakracore simulation environment for web or mobile. Its my dream project, I have it all in head for very long time, but I always considered how its about ISA license to do such thing. I heard that original 6502 ISA is totally free to use in anything even with MIT/BSD//CC licenses but how about 65C02 or even 65C816 ?? I really wish to emulate fixed 65C02, may be even without "decimal mode" working, I dont know, but the 65C816 ISA extensions are interesting too - will be fine to consider possible proper integration of 816 mode too, but its not critical, as I in fact want to run lots of virtual 6502 each with its own up to 64k adddress space on top of native interfaces/services kernel on top of any hardware. And whole such thing will be hopefully available as MIT/BSD licensed thing or open hardware to include in FPGA too etc. What do you think about such idea?? Can I obtain some consent from you to do this thing based on 65C02 and/or 65C816 ISA for free??? (It may at least initially be not fully compliant, and I never considered cycle-accuracy, as its only for nonrealtime scripting of very tiny applets, some kindd of very tiny multicore bytecode based on old good 6502 :-). Hopefully you understood the idea, have good days and still fun with your wonderfull devices!

Petr Antos, AP-ware servis & mixworx.net
Prague, Czech Repuzblic


